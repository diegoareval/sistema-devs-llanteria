/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistema.vistas;

import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import sistema.datos.baseDatos;
import sistema.datos.finventario;
import sistema.datos.SucursalesEnvio;
import sistema.pojos.Envios;
import sistema.pojos.Productos;
import sistema.pojos.Sucursales;
import sistema.pojos.detalleEnvio;

/**
 *
 * @author Usuario
 */
public class EnviosSucursales extends javax.swing.JDialog {

    /* en el modelo dela tabla sobreescribimos el metodo isCellEditable 
     para que la tabla no se pueda editar manualmente*/
    DefaultTableModel modeloTablaProducto = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };

    DefaultListModel<Productos> modeloListaProducto = new DefaultListModel<Productos>();
    DefaultComboBoxModel<Sucursales> modeloSucursal;
    baseDatos base = new baseDatos();
    SucursalesEnvio objEnvio = new SucursalesEnvio();
    detalleEnvio objDetalleEnvio = new detalleEnvio();
    finventario inventario = new finventario();

    /**
     * Creates new form EnviosSucursales
     */
    public EnviosSucursales(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        modeloSucursal = new DefaultComboBoxModel<Sucursales>();
        cargarColumnasTabla();
        cargarListenerModeloTabla();
        cargarModeloSucursal();
        initComponents();
        this.setLocationRelativeTo(null);

    }

    private void cargarModeloSucursal() {
        limpiarModelos(modeloSucursal);

        ArrayList<Sucursales> lista;
        lista = objEnvio.obtenerSucursal("");

        for (Sucursales sucursal : lista) {

            modeloSucursal.addElement(sucursal);

        }

    }

    private void limpiarModelos(DefaultComboBoxModel modelo) {
        int numFila = modelo.getSize(); // cantidad de filas
        if (numFila > 0) {
            // debe de ser i mayor o igual a cero
            for (int i = numFila - 1; i >= 0; i--) { // recorre de mayor a menor
                modelo.removeElementAt(i); // borra la fila
            }
        }
    }

    private void cargarListenerModeloTabla() {
        modeloTablaProducto.addTableModelListener(new TableModelListener() {
            @Override
            public void tableChanged(TableModelEvent e) {
                int numFila = modeloTablaProducto.getRowCount();

                //variable de la sumatoria de la envio
                int cantidades = 0;
                for (int i = 0; i < numFila; i++) {
                    cantidades += 1;
                }
                lblCantidad.setText(String.valueOf(cantidades));
            }
        });

    }

    private void cargarColumnasTabla() {
        modeloTablaProducto.addColumn("Clave");
        modeloTablaProducto.addColumn("Nombre");
        modeloTablaProducto.addColumn("Precio venta");
        modeloTablaProducto.addColumn("Cantidad");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaProducto = new javax.swing.JList<>();
        txtBuscarProd = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaVenta = new javax.swing.JTable();
        btnRealizarVenta = new javax.swing.JButton();
        lblCantidad = new javax.swing.JLabel();
        javax.swing.JComboBox<Sucursales> comboSucursales = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        btnRealizarVenta1 = new javax.swing.JButton();
        btnRealizarVenta2 = new javax.swing.JButton();
        lblCantidad1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(231, 236, 237));

        listaProducto.setBackground(new java.awt.Color(85, 95, 128));
        listaProducto.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        listaProducto.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        listaProducto.setForeground(new java.awt.Color(196, 212, 212));
        listaProducto.setModel(modeloListaProducto);
        listaProducto.setToolTipText("Resultado de busqueda...");
        listaProducto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                listaProductoMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(listaProducto);

        txtBuscarProd.setBackground(new java.awt.Color(238, 236, 236));
        txtBuscarProd.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        txtBuscarProd.setToolTipText("Escriba el nombre o codigo del producto...");
        txtBuscarProd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarProdKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dotum", 1, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sys/Files/icons8_Search_32px.png"))); // NOI18N
        jLabel1.setText("Buscar productos:");

        tablaVenta.setBackground(new java.awt.Color(196, 212, 212));
        tablaVenta.setModel(modeloTablaProducto);
        tablaVenta.setGridColor(new java.awt.Color(0, 204, 153));
        tablaVenta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tablaVentaMousePressed(evt);
            }
        });
        tablaVenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tablaVentaKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tablaVenta);

        btnRealizarVenta.setBackground(new java.awt.Color(231, 236, 237));
        btnRealizarVenta.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnRealizarVenta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sys/Files/paper-plane-1.png"))); // NOI18N
        btnRealizarVenta.setText("Enviar Productos");
        btnRealizarVenta.setToolTipText("Guardar el envio...");
        btnRealizarVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRealizarVentaActionPerformed(evt);
            }
        });

        lblCantidad.setFont(new java.awt.Font("sansserif", 3, 14)); // NOI18N
        lblCantidad.setText("0");

        comboSucursales.setModel(modeloSucursal);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sys/Files/home-1.png"))); // NOI18N
        jLabel2.setText("Selecciona la Sucursal a enviar:");

        btnRealizarVenta1.setBackground(new java.awt.Color(204, 204, 204));
        btnRealizarVenta1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnRealizarVenta1.setText("Cancelar");
        btnRealizarVenta1.setToolTipText("Guardar la venta...");
        btnRealizarVenta1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRealizarVenta1ActionPerformed(evt);
            }
        });

        btnRealizarVenta2.setBackground(new java.awt.Color(204, 204, 204));
        btnRealizarVenta2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnRealizarVenta2.setText("Eliminar");
        btnRealizarVenta2.setToolTipText("Guardar la venta...");
        btnRealizarVenta2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRealizarVenta2ActionPerformed(evt);
            }
        });

        lblCantidad1.setFont(new java.awt.Font("Dotum", 1, 14)); // NOI18N
        lblCantidad1.setText("Total en la lista:");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sys/Files/paper-plane-2.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnRealizarVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(109, 109, 109)
                        .addComponent(btnRealizarVenta2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(97, 97, 97)
                        .addComponent(btnRealizarVenta1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtBuscarProd)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE))
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(comboSucursales, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(37, 37, 37)
                                        .addComponent(jLabel2)
                                        .addGap(12, 12, 12)))
                                .addGap(10, 10, 10)
                                .addComponent(lblCantidad1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 27, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(jScrollPane1)))))
                .addGap(25, 25, 25))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(comboSucursales, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblCantidad1)
                        .addComponent(lblCantidad))
                    .addComponent(txtBuscarProd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnRealizarVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnRealizarVenta2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnRealizarVenta1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listaProductoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaProductoMousePressed
        // evento cuando se le da doble clic alos productos:
        JList lista = (JList) evt.getSource();
        int index = lista.locationToIndex(evt.getPoint());
        Productos prod = (Productos) lista.getSelectedValue();

        if (evt.getClickCount() == 2) { //añadir producto a tabla
            // cuando da 2 clic
            anadirProducto(prod);
        }
        if (evt.getClickCount() == 1) {
            // cuando da 1 clic
        }
    }//GEN-LAST:event_listaProductoMousePressed

    private void anadirProducto(Productos prod) {
        String tipoRegistro = String.valueOf(prod.getTipoRegistro());
        if(tipoRegistro.equalsIgnoreCase("servicio")){
            JOptionPane.showMessageDialog(null,"El registro es un servicio");
            return;
        }
        
        String codigo = String.valueOf(prod.getIdProducto());
        String nombre = prod.getNombreProduc();
        String precio = String.valueOf(prod.getPrecioSujerido());
        // arego de tipo string con todos los datos..
        String[] listaProductos = {codigo, nombre, precio, "1"};
        // le pasamos el array al modelo de la tabla
        modeloTablaProducto.addRow(listaProductos);
    }
    private void txtBuscarProdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarProdKeyReleased
        /* este evento es para el buscador del producto, cuando el usuario escribe
        y suelta la tecla se activa:  */

        modeloListaProducto.removeAllElements();

        String campoBuscar = txtBuscarProd.getText().toLowerCase();
        // obtener los productos de base datos atraves del arraylist
        ArrayList<Productos> listaProducto = base.obtenerProductosCriterio(campoBuscar);
        if (campoBuscar.isEmpty()) {
            modeloListaProducto.removeAllElements();
        } else {
            // recorremos el foreach con toda su lista de prod
            for (Productos producto : listaProducto) {
                modeloListaProducto.addElement(producto); // añadimos el objeto
            }
        }
    }//GEN-LAST:event_txtBuscarProdKeyReleased
// evento para cambiar el total de envio

    private void cambiarCantidad(int filaSelec) {
        String cantidad = JOptionPane.showInputDialog("Modificar cantidad");
        if (cantidad.isEmpty()) {
            return;
        }
        try {
            modeloTablaProducto.setValueAt(cantidad, filaSelec, 3);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Debe ingresar números válidos...");
        }
    }

    private void tablaVentaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaVentaMousePressed
        // este codigo es igual al de arriva:
        // Evento cuando se selecciona un producto de la tabla y preciona f2 para modificar cantidad:
        if (evt.getClickCount() == 2) {
            int filaSeleccionada = tablaVenta.getSelectedRow();
            cambiarCantidad(filaSeleccionada);
        }
    }//GEN-LAST:event_tablaVentaMousePressed

    private void tablaVentaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaVentaKeyReleased
        // Evento cuando se selecciona un producto de la tabla y preciona f2 para modificar cantidad:
        if (evt.getKeyCode() == KeyEvent.VK_F2) {
            int filaSeleccionada = tablaVenta.getSelectedRow();
            cambiarCantidad(filaSeleccionada);
        }
    }//GEN-LAST:event_tablaVentaKeyReleased

    private void btnRealizarVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRealizarVentaActionPerformed
        // obtener la fecha actual...
        Calendar calendarioLocal = Calendar.getInstance();
        java.util.Date fechaActual = calendarioLocal.getTime();
        long fechaMilisegundo = fechaActual.getTime();

        java.sql.Date fecha = new java.sql.Date(fechaMilisegundo);
        String fechaCadena = String.valueOf(fecha);

        //guardar envio
        Envios envio = new Envios();
        envio.setFechaEnvio(fechaCadena);
        //obtener el objeto del modelo y combobox de sucursal
        Sucursales sucursal = (Sucursales) this.modeloSucursal.getSelectedItem();
        envio.setIdSucursal(sucursal.getIdSucursal());
        int idEnvio = objEnvio.insertarEnvioSucursal(envio);
        int cantidadFilas = modeloTablaProducto.getRowCount();
        
        if(cantidadFilas<=0){
            return;
        }

        // for para guardar todos los detalles
        for (int i = 0; i < cantidadFilas; i++) {
            String idProd = (String) modeloTablaProducto.getValueAt(i, 0);
            String cantidad = (String) modeloTablaProducto.getValueAt(i, 3);

            //llenar el constructor
            objDetalleEnvio.setIdEnvio(idEnvio);
            objDetalleEnvio.setCantidadEnviado(Double.parseDouble(cantidad));
            objDetalleEnvio.setIdProducto(Integer.parseInt(idProd));

            //agregar al detalle de envio
            objEnvio.insertarDetalleEnvio(objDetalleEnvio);
            //disminuir inventario
            int codProd = Integer.parseInt(idProd);
            double cant = Double.parseDouble(cantidad);
            inventario.disminuirInventario(codProd, cant);

        }
        JOptionPane.showMessageDialog(null, "Envio realizado...");
        
        for (int i = cantidadFilas - 1; i >= 0; i--) {
            modeloTablaProducto.removeRow(i);
        }

    }//GEN-LAST:event_btnRealizarVentaActionPerformed

    private void btnRealizarVenta1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRealizarVenta1ActionPerformed
        // TODO add your handling code here:
        int cantidaFilas = modeloTablaProducto.getRowCount();

        if (cantidaFilas > 0) {
            int opcion = JOptionPane.showConfirmDialog(this, "¿Estas seguro de eliminar el producto?");

            if (opcion == 0) {
                //recorre todas las filas del modelo y las borra de la ultima asta la primera
                for (int i = cantidaFilas - 1; i >= 0; i--) {
                    modeloTablaProducto.removeRow(i);
                }
            }
        }
    }//GEN-LAST:event_btnRealizarVenta1ActionPerformed

    private void btnRealizarVenta2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRealizarVenta2ActionPerformed
        // TODO add your handling code here:
        int cantidadFila = modeloTablaProducto.getRowCount();
        int filaSeleccionada = tablaVenta.getSelectedRow();

        if ((cantidadFila > 0) && (filaSeleccionada >= 0)) {
            int opcion = JOptionPane.showConfirmDialog(this, "¿Estas seguro de eliminar el producto?");

            if (opcion == 0) {
                modeloTablaProducto.removeRow(filaSeleccionada);
            }
        }
    }//GEN-LAST:event_btnRealizarVenta2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EnviosSucursales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EnviosSucursales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EnviosSucursales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EnviosSucursales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EnviosSucursales dialog = new EnviosSucursales(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRealizarVenta;
    private javax.swing.JButton btnRealizarVenta1;
    private javax.swing.JButton btnRealizarVenta2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCantidad;
    private javax.swing.JLabel lblCantidad1;
    private javax.swing.JList<Productos> listaProducto;
    private javax.swing.JTable tablaVenta;
    private javax.swing.JTextField txtBuscarProd;
    // End of variables declaration//GEN-END:variables
}
